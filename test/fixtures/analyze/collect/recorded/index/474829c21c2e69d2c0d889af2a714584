{"_id":"graphql-shorthand-parser","_rev":"2-8a4abe71d406323ccb96762a491f6a53","name":"graphql-shorthand-parser","description":"Parse GraphQL schemas from shorthand notation","dist-tags":{"latest":"0.0.6"},"author":{"name":"Cameron Hunter","email":"hello@cameronhunter.co.uk"},"time":{"modified":"2016-03-21T22:25:18.701Z","created":"2016-01-18T01:42:44.171Z","0.0.2":"2016-01-18T01:42:44.171Z","0.0.3":"2016-01-18T08:35:21.753Z","0.0.4":"2016-01-18T08:46:25.408Z","0.0.5":"2016-01-18T08:48:31.680Z","0.0.6":"2016-03-21T22:25:18.701Z"},"versions":{"0.0.2":{"name":"graphql-shorthand-parser","version":"0.0.2","description":"Parse GraphQL schemas from shorthand notation","main":"dist/graphql-shorthand.js","scripts":{"build":"rollup -c","pretest":"npm run build","test":"ava","prepublish":"npm run test","preparse":"npm run build","parse":"./bin/parse"},"files":["dist"],"keywords":["graphql"],"author":"Cameron Hunter <hello@cameronhunter.co.uk>","license":"MIT","devDependencies":{"ava":"^0.10.0","babel-preset-es2015-rollup ":"^1.1.1","babel-preset-stage-1":"^6.3.13","rollup":"^0.25.0","rollup-plugin-babel":"^2.3.9","rollup-plugin-pegjs":"^1.0.3"},"readme":"# GraphQL Shorthand Parser\n\n[![Build Status](https://travis-ci.org/cameronhunter/graphql-shorthand-parser.svg?branch=master)](https://travis-ci.org/cameronhunter/graphql-shorthand-parser) [![NPM Version](https://img.shields.io/npm/v/graphql-shorthand-parser.svg)](https://npmjs.org/package/graphql-shorthand-parser) [![License](https://img.shields.io/npm/l/graphql-shorthand-parser.svg)](https://github.com/cameronhunter/graphql-shorthand-parser/blob/master/LICENSE.md)\n\nParse GraphQL shorthand notation into a JSON object that can be used to\nauto-generate schema files.\n\n### Shorthand notation\n```\n// One of the films in the Star Wars Trilogy\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n// A character in the Star Wars Trilogy\ninterface Character {\n  id: String!               // The id of the character\n  name: String              // The name of the character\n  friends: [Character]      // The friends of the character, or an empty list if they have none\n  appearsIn: [Episode]      // Which movies they appear in\n}\n\n// A humanoid creature in the Star Wars universe\ntype Human : Character {\n  id: String!               // The id of the human\n  name: String              // The name of the human\n  friends: [Character]      // The friends of the character, or an empty list if they have none\n  appearsIn: [Episode]      // Which movies they appear in\n  homePlanet: String        // The home planet of the human, or null if unknown\n}\n\n// A mechanical creature in the Star Wars universe\ntype Droid : Character {\n  id: String!               // The id of the droid\n  name: String              // The name of the droid\n  friends: [Character]      // The friends of the character, or an empty list if they have none\n  appearsIn: [Episode]      // Which movies they appear in\n  primaryFunction: String   // The primary function of the droid\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: String!): Human\n  droid(id: String!): Droid\n}\n```\n\n### Parsed notation to JSON\n```json\n[\n  {\n    \"type\": \"ENUM\",\n    \"name\": \"Episode\",\n    \"description\": \"One of the films in the Star Wars Trilogy\",\n    \"values\": [\n      \"NEWHOPE\",\n      \"EMPIRE\",\n      \"JEDI\"\n    ]\n  },\n  {\n    \"type\": \"INTERFACE\",\n    \"name\": \"Character\",\n    \"description\": \"A character in the Star Wars Trilogy\",\n    \"fields\": {\n      \"id\": {\n        \"description\": \"The id of the character\",\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"description\": \"The name of the character\",\n        \"type\": \"String\",\n        \"required\": false\n      },\n      \"friends\": {\n        \"description\": \"The friends of the character, or an empty list if they have none\",\n        \"type\": \"Character\",\n        \"required\": false,\n        \"array\": true\n      },\n      \"appearsIn\": {\n        \"description\": \"Which movies they appear in\",\n        \"type\": \"Episode\",\n        \"required\": false,\n        \"array\": true\n      }\n    }\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Human\",\n    \"description\": \"A humanoid creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"description\": \"The id of the human\",\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"description\": \"The name of the human\",\n        \"type\": \"String\",\n        \"required\": false\n      },\n      \"friends\": {\n        \"description\": \"The friends of the character, or an empty list if they have none\",\n        \"type\": \"Character\",\n        \"required\": false,\n        \"array\": true\n      },\n      \"appearsIn\": {\n        \"description\": \"Which movies they appear in\",\n        \"type\": \"Episode\",\n        \"required\": false,\n        \"array\": true\n      },\n      \"homePlanet\": {\n        \"description\": \"The home planet of the human, or null if unknown\",\n        \"type\": \"String\",\n        \"required\": false\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Droid\",\n    \"description\": \"A mechanical creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"description\": \"The id of the droid\",\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"description\": \"The name of the droid\",\n        \"type\": \"String\",\n        \"required\": false\n      },\n      \"friends\": {\n        \"description\": \"The friends of the character, or an empty list if they have none\",\n        \"type\": \"Character\",\n        \"required\": false,\n        \"array\": true\n      },\n      \"appearsIn\": {\n        \"description\": \"Which movies they appear in\",\n        \"type\": \"Episode\",\n        \"required\": false,\n        \"array\": true\n      },\n      \"primaryFunction\": {\n        \"description\": \"The primary function of the droid\",\n        \"type\": \"String\",\n        \"required\": false\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Query\",\n    \"fields\": {\n      \"hero\": {\n        \"type\": \"Character\",\n        \"required\": false,\n        \"args\": {\n          \"episode\": {\n            \"type\": \"Episode\",\n            \"required\": false\n          }\n        }\n      },\n      \"human\": {\n        \"type\": \"Human\",\n        \"required\": false,\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      },\n      \"droid\": {\n        \"type\": \"Droid\",\n        \"required\": false,\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      }\n    }\n  }\n]\n```","readmeFilename":"README.md","_id":"graphql-shorthand-parser@0.0.2","dist":{"tarball":"https://registry.npmjs.org/graphql-shorthand-parser/-/graphql-shorthand-parser-0.0.2.tgz","shasum":"efb356157e67cca7cd264c5311e8b51010beadb9"},"_npmVersion":"1.3.11","_from":".","_npmUser":{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"},"maintainers":[{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"}],"directories":{}},"0.0.3":{"name":"graphql-shorthand-parser","version":"0.0.3","description":"Parse GraphQL schemas from shorthand notation","main":"dist/graphql-shorthand.js","scripts":{"build":"rollup -c","pretest":"npm run build","test":"ava","prepublish":"npm run test","preparse":"npm run build","parse":"./bin/parse","watch":"npm-watch"},"watch":{"test":{"patterns":["src","test"]}},"files":["dist"],"keywords":["graphql"],"author":"Cameron Hunter <hello@cameronhunter.co.uk>","license":"MIT","devDependencies":{"ava":"^0.10.0","babel-preset-es2015-rollup ":"^1.1.1","babel-preset-stage-1":"^6.3.13","npm-watch":"^0.1.1","rollup":"^0.25.0","rollup-plugin-babel":"^2.3.9","rollup-plugin-pegjs":"^1.0.3","tap-diff":"^0.1.1"},"readme":"# GraphQL Shorthand Parser\n\n[![Build Status](https://travis-ci.org/cameronhunter/graphql-shorthand-parser.svg?branch=master)](https://travis-ci.org/cameronhunter/graphql-shorthand-parser) [![NPM Version](https://img.shields.io/npm/v/graphql-shorthand-parser.svg)](https://npmjs.org/package/graphql-shorthand-parser) [![License](https://img.shields.io/npm/l/graphql-shorthand-parser.svg)](https://github.com/cameronhunter/graphql-shorthand-parser/blob/master/LICENSE.md)\n\nParse GraphQL shorthand notation into a JSON object that can be used to\nauto-generate schema files.\n\n### Shorthand notation\n```\n// One of the films in the Star Wars Trilogy\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n// A character in the Star Wars Trilogy\ninterface Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n}\n\n// A humanoid creature in the Star Wars universe\ntype Human : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n}\n\n// A mechanical creature in the Star Wars universe\ntype Droid : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  primaryFunction: String\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: String!): Human\n  droid(id: String!): Droid\n}\n```\n\n### Parsed notation to JSON\n```json\n[\n  {\n    \"type\": \"ENUM\",\n    \"name\": \"Episode\",\n    \"description\": \"One of the films in the Star Wars Trilogy\",\n    \"values\": [\n      \"NEWHOPE\",\n      \"EMPIRE\",\n      \"JEDI\"\n    ]\n  },\n  {\n    \"type\": \"INTERFACE\",\n    \"name\": \"Character\",\n    \"description\": \"A character in the Star Wars Trilogy\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      }\n    }\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Human\",\n    \"description\": \"A humanoid creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"homePlanet\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Droid\",\n    \"description\": \"A mechanical creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"primaryFunction\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Query\",\n    \"fields\": {\n      \"hero\": {\n        \"type\": \"Character\",\n        \"args\": {\n          \"episode\": {\n            \"type\": \"Episode\"\n          }\n        }\n      },\n      \"human\": {\n        \"type\": \"Human\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      },\n      \"droid\": {\n        \"type\": \"Droid\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      }\n    }\n  }\n]\n```","readmeFilename":"README.md","_id":"graphql-shorthand-parser@0.0.3","dist":{"tarball":"https://registry.npmjs.org/graphql-shorthand-parser/-/graphql-shorthand-parser-0.0.3.tgz","shasum":"58ddc9123dc6cdd77e85143e08db00873c197aed"},"_npmVersion":"1.3.11","_from":".","_npmUser":{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"},"maintainers":[{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"}],"directories":{}},"0.0.4":{"name":"graphql-shorthand-parser","version":"0.0.4","description":"Parse GraphQL schemas from shorthand notation","main":"dist/graphql-shorthand.js","scripts":{"build":"rollup -c","pretest":"npm run build","test":"ava --tap | tap-diff","prepublish":"npm run test","preparse":"npm run build","parse":"./bin/parse"},"files":["dist"],"keywords":["graphql"],"author":"Cameron Hunter <hello@cameronhunter.co.uk>","license":"MIT","devDependencies":{"ava":"^0.10.0","babel-preset-es2015-rollup":"^1.1.1","babel-preset-stage-1":"^6.3.13","npm-watch":"^0.1.1","rollup":"^0.25.0","rollup-plugin-babel":"^2.3.9","rollup-plugin-pegjs":"^1.0.3","tap-diff":"^0.1.1"},"readme":"# GraphQL Shorthand Parser\n\n[![Build Status](https://travis-ci.org/cameronhunter/graphql-shorthand-parser.svg?branch=master)](https://travis-ci.org/cameronhunter/graphql-shorthand-parser) [![NPM Version](https://img.shields.io/npm/v/graphql-shorthand-parser.svg)](https://npmjs.org/package/graphql-shorthand-parser) [![License](https://img.shields.io/npm/l/graphql-shorthand-parser.svg)](https://github.com/cameronhunter/graphql-shorthand-parser/blob/master/LICENSE.md)\n\nParse GraphQL shorthand notation into a JSON object that can be used to\nauto-generate schema files.\n\n### Shorthand notation\n```\n// One of the films in the Star Wars Trilogy\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n// A character in the Star Wars Trilogy\ninterface Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n}\n\n// A humanoid creature in the Star Wars universe\ntype Human : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n}\n\n// A mechanical creature in the Star Wars universe\ntype Droid : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  primaryFunction: String\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: String!): Human\n  droid(id: String!): Droid\n}\n```\n\n### Parsed notation to JSON\n```json\n[\n  {\n    \"type\": \"ENUM\",\n    \"name\": \"Episode\",\n    \"description\": \"One of the films in the Star Wars Trilogy\",\n    \"values\": [\n      \"NEWHOPE\",\n      \"EMPIRE\",\n      \"JEDI\"\n    ]\n  },\n  {\n    \"type\": \"INTERFACE\",\n    \"name\": \"Character\",\n    \"description\": \"A character in the Star Wars Trilogy\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      }\n    }\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Human\",\n    \"description\": \"A humanoid creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"homePlanet\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Droid\",\n    \"description\": \"A mechanical creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"primaryFunction\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Query\",\n    \"fields\": {\n      \"hero\": {\n        \"type\": \"Character\",\n        \"args\": {\n          \"episode\": {\n            \"type\": \"Episode\"\n          }\n        }\n      },\n      \"human\": {\n        \"type\": \"Human\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      },\n      \"droid\": {\n        \"type\": \"Droid\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      }\n    }\n  }\n]\n```","readmeFilename":"README.md","_id":"graphql-shorthand-parser@0.0.4","dist":{"tarball":"https://registry.npmjs.org/graphql-shorthand-parser/-/graphql-shorthand-parser-0.0.4.tgz","shasum":"6d4ec1b31ed793d48ae0e8a5f901df26b124b16a"},"_npmVersion":"1.3.11","_from":".","_npmUser":{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"},"maintainers":[{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"}],"directories":{}},"0.0.5":{"name":"graphql-shorthand-parser","version":"0.0.5","description":"Parse GraphQL schemas from shorthand notation","main":"dist/graphql-shorthand.js","scripts":{"build":"rollup -c","pretest":"npm run build","test":"ava --tap | tap-diff","prepublish":"npm run test","preparse":"npm run build","parse":"./bin/parse"},"files":["dist"],"keywords":["graphql"],"author":"Cameron Hunter <hello@cameronhunter.co.uk>","license":"MIT","devDependencies":{"ava":"^0.10.0","babel-preset-es2015-rollup":"^1.1.1","babel-preset-stage-1":"^6.3.13","rollup":"^0.25.0","rollup-plugin-babel":"^2.3.9","rollup-plugin-pegjs":"^1.0.3","tap-diff":"^0.1.1"},"readme":"# GraphQL Shorthand Parser\n\n[![Build Status](https://travis-ci.org/cameronhunter/graphql-shorthand-parser.svg?branch=master)](https://travis-ci.org/cameronhunter/graphql-shorthand-parser) [![NPM Version](https://img.shields.io/npm/v/graphql-shorthand-parser.svg)](https://npmjs.org/package/graphql-shorthand-parser) [![License](https://img.shields.io/npm/l/graphql-shorthand-parser.svg)](https://github.com/cameronhunter/graphql-shorthand-parser/blob/master/LICENSE.md)\n\nParse GraphQL shorthand notation into a JSON object that can be used to\nauto-generate schema files.\n\n### Shorthand notation\n```\n// One of the films in the Star Wars Trilogy\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n// A character in the Star Wars Trilogy\ninterface Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n}\n\n// A humanoid creature in the Star Wars universe\ntype Human : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n}\n\n// A mechanical creature in the Star Wars universe\ntype Droid : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  primaryFunction: String\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: String!): Human\n  droid(id: String!): Droid\n}\n```\n\n### Parsed notation to JSON\n```json\n[\n  {\n    \"type\": \"ENUM\",\n    \"name\": \"Episode\",\n    \"description\": \"One of the films in the Star Wars Trilogy\",\n    \"values\": [\n      \"NEWHOPE\",\n      \"EMPIRE\",\n      \"JEDI\"\n    ]\n  },\n  {\n    \"type\": \"INTERFACE\",\n    \"name\": \"Character\",\n    \"description\": \"A character in the Star Wars Trilogy\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      }\n    }\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Human\",\n    \"description\": \"A humanoid creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"homePlanet\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Droid\",\n    \"description\": \"A mechanical creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"primaryFunction\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Query\",\n    \"fields\": {\n      \"hero\": {\n        \"type\": \"Character\",\n        \"args\": {\n          \"episode\": {\n            \"type\": \"Episode\"\n          }\n        }\n      },\n      \"human\": {\n        \"type\": \"Human\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      },\n      \"droid\": {\n        \"type\": \"Droid\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      }\n    }\n  }\n]\n```","readmeFilename":"README.md","_id":"graphql-shorthand-parser@0.0.5","dist":{"tarball":"https://registry.npmjs.org/graphql-shorthand-parser/-/graphql-shorthand-parser-0.0.5.tgz","shasum":"2c95a4e253c4b4c0813514f92895d5549d9871e6"},"_npmVersion":"1.3.11","_from":".","_npmUser":{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"},"maintainers":[{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"}],"directories":{}},"0.0.6":{"name":"graphql-shorthand-parser","version":"0.0.6","description":"Parse GraphQL schemas from shorthand notation","main":"dist/graphql-shorthand.js","scripts":{"build":"rollup -c","pretest":"npm run build","test":"ava --tap | tap-diff","postversion":"git push && git push --tags","prepublish":"npm run test","preparse":"npm run build","parse":"./bin/parse"},"files":["dist"],"keywords":["graphql"],"author":"Cameron Hunter <hello@cameronhunter.co.uk>","license":"MIT","devDependencies":{"ava":"^0.13.0","babel-preset-es2015-rollup":"^1.1.1","babel-preset-stage-1":"^6.3.13","rollup":"^0.25.0","rollup-plugin-babel":"^2.3.9","rollup-plugin-pegjs":"^2.0.0","tap-diff":"^0.1.1"},"readme":"# GraphQL Shorthand Parser\n\n[![Build Status](https://travis-ci.org/cameronhunter/graphql-shorthand-parser.svg?branch=master)](https://travis-ci.org/cameronhunter/graphql-shorthand-parser) [![NPM Version](https://img.shields.io/npm/v/graphql-shorthand-parser.svg)](https://npmjs.org/package/graphql-shorthand-parser) [![License](https://img.shields.io/npm/l/graphql-shorthand-parser.svg)](https://github.com/cameronhunter/graphql-shorthand-parser/blob/master/LICENSE.md)\n\nParse GraphQL shorthand notation into a JSON object that can be used to\nauto-generate schema files.\n\n### Shorthand notation\n```\n// One of the films in the Star Wars Trilogy\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n// A character in the Star Wars Trilogy\ninterface Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n}\n\n// A humanoid creature in the Star Wars universe\ntype Human : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n}\n\n// A mechanical creature in the Star Wars universe\ntype Droid : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  primaryFunction: String\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: String!): Human\n  droid(id: String!): Droid\n}\n```\n\n### Parsed notation to JSON\n```json\n[\n  {\n    \"type\": \"ENUM\",\n    \"name\": \"Episode\",\n    \"description\": \"One of the films in the Star Wars Trilogy\",\n    \"values\": [\n      \"NEWHOPE\",\n      \"EMPIRE\",\n      \"JEDI\"\n    ]\n  },\n  {\n    \"type\": \"INTERFACE\",\n    \"name\": \"Character\",\n    \"description\": \"A character in the Star Wars Trilogy\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      }\n    }\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Human\",\n    \"description\": \"A humanoid creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"homePlanet\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Droid\",\n    \"description\": \"A mechanical creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"primaryFunction\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Query\",\n    \"fields\": {\n      \"hero\": {\n        \"type\": \"Character\",\n        \"args\": {\n          \"episode\": {\n            \"type\": \"Episode\"\n          }\n        }\n      },\n      \"human\": {\n        \"type\": \"Human\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      },\n      \"droid\": {\n        \"type\": \"Droid\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      }\n    }\n  }\n]\n```","readmeFilename":"README.md","_id":"graphql-shorthand-parser@0.0.6","dist":{"tarball":"https://registry.npmjs.org/graphql-shorthand-parser/-/graphql-shorthand-parser-0.0.6.tgz","shasum":"7b65fe0fe822fd3bd8d1ebd42b2f03d20104321b"},"_npmVersion":"1.3.11","_from":".","_npmUser":{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"},"maintainers":[{"name":"cameronhunter","email":"hello@cameronhunter.co.uk"}],"directories":{}}},"readme":"# GraphQL Shorthand Parser\n\n[![Build Status](https://travis-ci.org/cameronhunter/graphql-shorthand-parser.svg?branch=master)](https://travis-ci.org/cameronhunter/graphql-shorthand-parser) [![NPM Version](https://img.shields.io/npm/v/graphql-shorthand-parser.svg)](https://npmjs.org/package/graphql-shorthand-parser) [![License](https://img.shields.io/npm/l/graphql-shorthand-parser.svg)](https://github.com/cameronhunter/graphql-shorthand-parser/blob/master/LICENSE.md)\n\nParse GraphQL shorthand notation into a JSON object that can be used to\nauto-generate schema files.\n\n### Shorthand notation\n```\n// One of the films in the Star Wars Trilogy\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n// A character in the Star Wars Trilogy\ninterface Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n}\n\n// A humanoid creature in the Star Wars universe\ntype Human : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n}\n\n// A mechanical creature in the Star Wars universe\ntype Droid : Character {\n  id: String!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  primaryFunction: String\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: String!): Human\n  droid(id: String!): Droid\n}\n```\n\n### Parsed notation to JSON\n```json\n[\n  {\n    \"type\": \"ENUM\",\n    \"name\": \"Episode\",\n    \"description\": \"One of the films in the Star Wars Trilogy\",\n    \"values\": [\n      \"NEWHOPE\",\n      \"EMPIRE\",\n      \"JEDI\"\n    ]\n  },\n  {\n    \"type\": \"INTERFACE\",\n    \"name\": \"Character\",\n    \"description\": \"A character in the Star Wars Trilogy\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      }\n    }\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Human\",\n    \"description\": \"A humanoid creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"homePlanet\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Droid\",\n    \"description\": \"A mechanical creature in the Star Wars universe\",\n    \"fields\": {\n      \"id\": {\n        \"type\": \"String\",\n        \"required\": true\n      },\n      \"name\": {\n        \"type\": \"String\"\n      },\n      \"friends\": {\n        \"type\": \"Character\",\n        \"list\": true\n      },\n      \"appearsIn\": {\n        \"type\": \"Episode\",\n        \"list\": true\n      },\n      \"primaryFunction\": {\n        \"type\": \"String\"\n      }\n    },\n    \"interfaces\": [\n      \"Character\"\n    ]\n  },\n  {\n    \"type\": \"TYPE\",\n    \"name\": \"Query\",\n    \"fields\": {\n      \"hero\": {\n        \"type\": \"Character\",\n        \"args\": {\n          \"episode\": {\n            \"type\": \"Episode\"\n          }\n        }\n      },\n      \"human\": {\n        \"type\": \"Human\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      },\n      \"droid\": {\n        \"type\": \"Droid\",\n        \"args\": {\n          \"id\": {\n            \"type\": \"String\",\n            \"required\": true\n          }\n        }\n      }\n    }\n  }\n]\n```"}
